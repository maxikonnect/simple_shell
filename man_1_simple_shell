.SH NAME
Holberton Shell (hsh)
.SH SYNOPSIS
**hsh** \[*command*] \[*options ...*]
.SH DESCRIPTION
**hsh** is a shell command interpreter that executes commands read from standard input or from a file. It aims to be a clone of the standard command interpreter of Unix and Unix-like systems.
.SH OPTIONS
A simple command consists of optional variable assignments followed by space-separated words and redirections, terminated by a control operator. The initial word specifies the command to be executed, passed as argument zero. The subsequent words are treated as arguments for the invoked command.

The return value of a simple command is its exit status, or 128+n if the command is terminated by signal n.
.SS Pipelines
A pipeline is a sequence of one or more commands separated by the control operators `|` or `|&`. The format for a pipeline is as follows:
.PP
\[command \[..ARGS\]] \[| - |&] \[command2 \[..ARGS\]]
.PP
The standard output of the first command is connected to the standard input of the second command using a pipe. This connection is established prior to any specified redirections (see REDIRECTION below). If `|&` is used, the standard error of the first command is also connected to the standard input of the second command through the pipe; this is shorthand for `2>&1 |`. Any redirections specified by the command are performed after this implicit redirection of standard error to standard output.
.SS Lists
A list is a sequence of one or more pipelines separated by operators like `;`, `&`, `&&`, or `||`, and optionally terminated by one of `;`, `&`, or a newline.

Among these list operators, `&&` and `||` have equal precedence, followed by `;` and `&`, which share equal precedence. A series of newlines can replace a semicolon to delimit commands.

If a command is terminated with the `&` operator, the shell runs the command in the background within a subshell. The shell doesn't wait for the command to finish, and the return status is set to 0. Commands separated by `;` are executed sequentially, with the shell waiting for each command to complete before proceeding. The return status reflects the exit status of the last executed command.

AND and OR lists are sequences of one or more pipelines separated by the `&&` and `||` control operators, respectively. They are executed with left associativity. An AND list has the form:
.PP
command1 && command2
.PP
Here, `command2` runs only if `command1` returns an exit status of zero.

An OR list has the form:
.PP
command1 || command2
.PP
`command2` is executed only if `command1` returns a non-zero exit status. The return status of AND and OR lists is determined by the exit status of the last executed command within the list.

